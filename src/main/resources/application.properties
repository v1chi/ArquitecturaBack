# Puerto del servidor (opcional)
server.port=8080
spring.application.name=socialnetwork

# PostgreSQL datasource (from .env)
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${PGUSER}
spring.datasource.password=${PGPASSWORD}

# JPA / Hibernate
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# JWT secret (from .env). Must be >= 64 chars
jwt.secret=${JWT_SECRET:change_me_to_a_long_random_secret_key_at_least_64_chars________________________}
jwt.accessToken.expirationMinutes=40320
jwt.emailToken.expirationMinutes=60
# Optional: how often to run unconfirmed-user cleanup (ms)
cleanup.unconfirmedUser.fixedDelay=600000
jwt.passwordResetToken.expirationMinutes=60

# Mail (uses environment variables or defaults)
spring.mail.host=${SMTP_HOST:smtp.gmail.com}
spring.mail.port=${SMTP_PORT:587}
spring.mail.username=${EMAIL_USER:}
spring.mail.password=${EMAIL_PASS:}
spring.mail.protocol=smtp
spring.mail.default-encoding=UTF-8
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# Frontend URL for generating email links
frontend.base.url=${FRONTEND_BASE_URL:http://localhost:5173}
